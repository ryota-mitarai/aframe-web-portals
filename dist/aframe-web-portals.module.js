!function(e){function t(i){if(s[i])return s[i].exports;var r=s[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var s={};t.m=e,t.c=s,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");var s={childList:!0,attributes:!0,subtree:!0};AFRAME.registerComponent("aabb-collider",{schema:{collideNonVisible:{default:!1},debug:{default:!1},enabled:{default:!0},interval:{default:80},objects:{default:""}},init:function(){this.centerDifferenceVec3=new THREE.Vector3,this.clearedIntersectedEls=[],this.closestIntersectedEl=null,this.boundingBox=new THREE.Box3,this.boxCenter=new THREE.Vector3,this.boxHelper=new THREE.BoxHelper,this.boxMax=new THREE.Vector3,this.boxMin=new THREE.Vector3,this.hitClosestClearEventDetail={},this.hitClosestEventDetail={},this.intersectedEls=[],this.objectEls=[],this.newIntersectedEls=[],this.prevCheckTime=void 0,this.previousIntersectedEls=[],this.setDirty=this.setDirty.bind(this),this.observer=new MutationObserver(this.setDirty),this.dirty=!0,this.hitStartEventDetail={intersectedEls:this.newIntersectedEls}},play:function(){this.observer.observe(this.el.sceneEl,s),this.el.sceneEl.addEventListener("object3dset",this.setDirty),this.el.sceneEl.addEventListener("object3dremove",this.setDirty)},remove:function(){this.observer.disconnect(),this.el.sceneEl.removeEventListener("object3dset",this.setDirty),this.el.sceneEl.removeEventListener("object3dremove",this.setDirty)},tick:function(e){var t,s,i,r,l=this.boundingBox,n=this.centerDifferenceVec3,o=this.clearedIntersectedEls,c=this.intersectedEls,a=this.el,h=this.newIntersectedEls,d=this.objectEls,b=this.prevCheckTime,u=this.previousIntersectedEls;if(this.data.enabled&&!(b&&e-b<this.data.interval)){for(this.prevCheckTime=e,this.dirty&&this.refreshObjects(),l.setFromObject(a.object3D),this.boxMin.copy(l.min),this.boxMax.copy(l.max),l.getCenter(this.boxCenter),this.data.debug&&(this.boxHelper.setFromObject(a.object3D),this.boxHelper.parent||a.sceneEl.object3D.add(this.boxHelper)),function(e,t){var s;for(e.length=0,s=0;s<t.length;s++)e[s]=t[s]}(u,c),c.length=0,r=0;r<d.length;r++)d[r]!==this.el&&(this.data.collideNonVisible||d[r].getAttribute("visible")?this.isIntersecting(d[r])&&c.push(d[r]):this.data.debug&&(t=d[r].object3D.boxHelper)&&(a.sceneEl.object3D.remove(t),d[r].object3D.boxHelper=null));for(h.length=0,r=0;r<c.length;r++)-1===u.indexOf(c[r])&&h.push(c[r]);for(o.length=0,r=0;r<u.length;r++)-1===c.indexOf(u[r])&&(u[r].hasAttribute("aabb-collider")||u[r].emit("hitend"),o.push(u[r]));for(r=0;r<h.length;r++)h[r]!==this.el&&(h[r].hasAttribute("aabb-collider")||h[r].emit("hitstart"));for(r=0;r<c.length;r++)c[r]!==this.el&&(n.copy(c[r].object3D.boundingBoxCenter).sub(this.boxCenter),(void 0===s||n.length()<s)&&(s=n.length(),i=c[r]));!c.length&&this.closestIntersectedEl?(this.hitClosestClearEventDetail.el=this.closestIntersectedEl,this.closestIntersectedEl.emit("hitclosestclear"),this.closestIntersectedEl=null,a.emit("hitclosestclear",this.hitClosestClearEventDetail)):i!==this.closestIntersectedEl&&(this.closestIntersectedEl&&(this.hitClosestClearEventDetail.el=this.closestIntersectedEl,this.closestIntersectedEl.emit("hitclosestclear",this.hitClosestClearEventDetail)),i&&(i.emit("hitclosest"),this.closestIntersectedEl=i,this.hitClosestEventDetail.el=i,a.emit("hitclosest",this.hitClosestEventDetail))),o.length&&a.emit("hitend"),h.length&&a.emit("hitstart",this.hitStartEventDetail)}},isIntersecting:function(){var e=new THREE.Box3;return function(t){var s,i;return e.setFromObject(t.object3D),this.data.debug&&(t.object3D.boxHelper||(t.object3D.boxHelper=new THREE.BoxHelper(t.object3D,new THREE.Color(Math.random(),Math.random(),Math.random())),t.sceneEl.object3D.add(t.object3D.boxHelper)),t.object3D.boxHelper.setFromObject(t.object3D)),s=e.min,i=e.max,t.object3D.boundingBoxCenter=t.object3D.boundingBoxCenter||new THREE.Vector3,e.getCenter(t.object3D.boundingBoxCenter),this.boxMin.x<=i.x&&this.boxMax.x>=s.x&&this.boxMin.y<=i.y&&this.boxMax.y>=s.y&&this.boxMin.z<=i.z&&this.boxMax.z>=s.z}}(),setDirty:function(){this.dirty=!0},refreshObjects:function(){var e=this.data;this.objectEls=e.objects?this.el.sceneEl.querySelectorAll(e.objects):this.el.sceneEl.children,this.dirty=!1}})}]),AFRAME.registerComponent("web-portal",{schema:{url:{default:""},iframe:{default:""},player:{default:""},text:{default:""},portalFrame:{default:!0}},init:function(){var e=this.el,t=this.data,s=e.sceneEl;if(e.setAttribute("geometry",{primitive:"plane",width:1.5,height:2.4}),e.setAttribute("material",{color:"#faf"}),""!==t.player){var i;document.querySelector(t.player),e.setAttribute("aabb-collider",{objects:t.player}),""!==t.iframe?i=document.querySelector(t.iframe):((i=document.createElement("iframe")).style.position="fixed",i.style.top="0",i.style.left="0",i.style.width="100%",i.style.height="100%",i.style.overflow="none",i.style.zIndex=-10,i.style.display="none",document.body.appendChild(i)),i.src=t.url;var r=document.createElement("a-text");if(r.setAttribute("value",t.text),r.setAttribute("position","0 1.75 .4"),r.setAttribute("align","center"),e.appendChild(r),t.titleEl=r,1==t.portalFrame){var l=document.createElement("a-box");l.setAttribute("position",".75 0 .24"),l.setAttribute("scale",".25 2.6 .5"),e.appendChild(l);var n=document.createElement("a-box");n.setAttribute("position","-.75 0 .24"),n.setAttribute("scale",".25 2.6 .5"),e.appendChild(n);var o=document.createElement("a-box");o.setAttribute("position","0 1.2 .24"),o.setAttribute("scale","1.7 .25 .5"),e.appendChild(o);var c=document.createElement("a-box");c.setAttribute("position","0 0 -.06"),c.setAttribute("scale","1.6 2.5 .1"),e.appendChild(c)}e.addEventListener("hitstart",function(){console.log("hit"),s.style.zIndex=-10,s.style.display="none",i.style.zIndex=10,i.style.display="block",document.exitPointerLock()})}else console.error("aframe-web-portal: player not defined")},update:function(){var e=this.data;e.titleEl.setAttribute("value",e.text)}});
//# sourceMappingURL=aframe-web-portals.module.js.map
